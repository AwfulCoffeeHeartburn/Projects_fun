books = {}

def dict_from_file():
    with open("Book_release_dates") as file:
        for line in file.readlines():
            month, day, year, *title = line.split()
            books[str(title).lower().strip("[]").replace("'", "").replace(",", "")] = \
                str(month) + "/" + str(day) + "/" + str(year)
            # It's stripping from the ends of the string but not the stuff in the middle. How do I get it to
            # take out ALL the commas and apostrophes?
            # Answer: User .replace() instead of .strip(). .replace() takes out ALL of the specified character,
            # while .strip() just removes the specified characters from the beginning and end of a string.

    display_data()


def display_data():
    for key, value in books.items():
        print(f"{key.title()} is due to be released {value}")
        # It's storing the values as a tuple and that appears to be a problem.
        # How can I get it to display the name without the brackets and apostrophe's
        #       To do the above I used the .strip() method. There may be a more elegant way to accomplish
        #       removing the apostrophes and brackets but for now I'm going with strip even though it looks
        #       a bit clunky.
        # How can I configure it so I can search the name without being forced to
        # include brackets and apostrophe's.
        #       One more, for the above I used .strip()
        # So what do I really need to do here? Make it so the program can check the date and compare it to a list of
        # dates, then if that date matches one of the values in the books dictionary, send a notification to the user.

    while True:
        book = input("What book are you searching for? Press 'q' to quit.").lower()
        if book in books:
            print(f"{book.title()} is due to be released {books[book]}")
        elif book == 'q':
            break
        else:
            print(f"{book} is not in the database.")


dict_from_file()
